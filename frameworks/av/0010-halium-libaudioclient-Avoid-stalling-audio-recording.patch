From 71bb68454747f7c1fcac51fb1f70f227ad580259 Mon Sep 17 00:00:00 2001
From: Alfred Neumayer <dev.beidl@gmail.com>
Date: Sat, 4 Feb 2023 14:18:08 +0100
Subject: [PATCH 10/12] (halium) libaudioclient: Avoid stalling audio recording
 on SCHED_* checks

libaudioclient (responsible for polling buffers from micshm) waits up to half
a second on checking whether real-time scheduling priority has been set or not.

This has the unfortunate side-effect of stalling the audio record pipeline
for as long as the check is done, over and over again, causing A/V desync.

Remove the check altogether as there is no reason to stall audio recording
while MPEG4Writer is doing its job fine. If the priority is set, it's set.
If not, tough

Change-Id: I1ecbdd5a807c310cb6e0f8ef0a9e1dfaa2a86ec2
---
 media/libaudioclient/AudioRecord.cpp | 20 --------------------
 1 file changed, 20 deletions(-)

diff --git a/media/libaudioclient/AudioRecord.cpp b/media/libaudioclient/AudioRecord.cpp
index a5bcabf..a8d5e36 100644
--- a/media/libaudioclient/AudioRecord.cpp
+++ b/media/libaudioclient/AudioRecord.cpp
@@ -1266,26 +1266,6 @@ nsecs_t AudioRecord::processAudioBuffer()
         mLock.unlock();
         return NS_NEVER;
     }
-    if (mAwaitBoost) {
-        mAwaitBoost = false;
-        mLock.unlock();
-        static const int32_t kMaxTries = 5;
-        int32_t tryCounter = kMaxTries;
-        uint32_t pollUs = 10000;
-        do {
-            int policy = sched_getscheduler(0) & ~SCHED_RESET_ON_FORK;
-            if (policy == SCHED_FIFO || policy == SCHED_RR) {
-                break;
-            }
-            usleep(pollUs);
-            pollUs <<= 1;
-        } while (tryCounter-- > 0);
-        if (tryCounter < 0) {
-            ALOGE("%s(%d): did not receive expected priority boost on time", __func__, mPortId);
-        }
-        // Run again immediately
-        return 0;
-    }
 
     // Can only reference mCblk while locked
     int32_t flags = android_atomic_and(~CBLK_OVERRUN, &mCblk->mFlags);
-- 
2.45.2

